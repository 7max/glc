0.3.5 (2007/10/21)
   Scaler (both scale and ycbcr) bugfixes.
   Added sample build script (glc-build.sh).

0.3.4 (2007/10/17)
   Use 3D engine to draw frames instead of directly drawing pixels.
    Much smoother scaling while playing.
   More verbose IO error messages.
   Fixed audio skip calculations. Seeking doesn't cause audio desync
    any more.
   Some build-related fixes.

0.3.3 (2007/10/15)
   Reworked playback architecture. Should handle simultaneous audio
    and video streams better.
   Fix alsa async mode capture.
   Properly kill glc at error.

0.3.2 (2007/10/14)
   Hopefully fixed that crippling bash bug, glc-capture -s against
    scripts should be perfectly safe now.

0.3.1 (2007/10/13)
   Support for non-integer fps.
   Cleaned up audio format message. Should be more extensible now.
   Stream version bump (won't play old streams, sorry...).
   Support for capturing only selected area (cropping).
   Configurable audio silence threshold.

0.3.0 (2007/10/11)
   Split gl to gl_capture and gl_play.
   Split audio to audio_capture and audio_play
   Fixed threading bugs in scale, ycbcr and rgb.
   PBO timestamps should be accurate now.
   Lots of glc-play fixes (properly kill both audio and gl at CANCEL,
    CANCEL at WM_DELETE_WINDOW...)
   Lots of minor cleanups.

0.2.9 (2007/10/08)
   Use getopt_long() in glc-play, should make it much more accessible.
   New glc-capture application which sets correct environment variables
     based on nice list of command line arguments.

0.2.8 (2007/10/07)
   some code documentation (will someone really dare to look at this
    code...)
   Worked around some signal problems by starting alsa & opengl when
    capturing really starts.

0.2.7 (2007/10/07)
   Y'CbCr -> BGR conversion (rgb.c)
   Threading improvements, for example scale, ycbcr, rgb and unpack
    create one thread per CPU. glc should now scale nicely up to n
    CPUs.

0.2.6 (2007/10/05)
   BGR -> Y'CbCr conversion target (ycbcr.c) with scaling support
    Set GLC_COLORSPACE=420jpeg to convert to Y'CbCr 420jpeg at capture
    time. Scaling is pretty cheap operation if colorspace conversion
    is enabled and vice versa.
   yuv4mpeg target
   export as yuv4mpeg stream, also to stdout
    f.ex. glc-play file.glc -o - -y 1 | mplayer -
   export one audio/picture stream
   export wav to stdout
    f.ex. glc-play file.glc -o - -a 1 | mplayer -demuxer 35 -
   new example script glc-play-mplayer
   modified glc-encode script to take advantage of pipes and yuv4mpeg
    export capability (mplayer's bgr24 -> yv12 is very ugly)
   cleaned up img.c and wav.c
   cleaned up glc-play, especially command line arguments
   read fps from file and use it for exporting pictures/video

0.2.5 (2007/10/04)
   initialize pack & file processors when recording is actually started
    => no more empty stream files
   compression can be disabled by setting GLC_COMPRESS=0
   some audio threading hacks
    Hooked snd_pcm_...() calls shouldn't block anymore if target buffer
    is not ready. Of course this results skipping in captured stream.
    Setting GLC_AUDIO_SKIP=0 allows snd_pcm_...() calls to enter busy
    waiting state and thus ensures high-quality audio capture.
   use GL_ARB_pixel_buffer_object, if available, to asynchronously transfer
    pictures from GPU
    set GLC_TRY_PBO=0 to disable
   GLC_CAPTURE_BGRA=1 enables capturing BGRA frames and converting them
    to BGR in software at scale

0.2.4 (2007/10/03)
   alsa hook bugfix

0.2.3 (2007/10/03)
   reorganized wrapper library code
   start capturing immediately (GLC_START=1) or when specific key combination
    is pressed (GLC_HOTKEY="<Shift>F8")
   draw simple indicator at upper left corner when recording
    set GLC_INDICATOR=0 to disable
    indicator is not included in the recorded stream

0.2.2 (2007/10/02)
   unhook only alsa modules
   audio playback support
   improved source tree layout and Makefile

0.2.1 (2007/10/01)
   ALSA capture redone, should be more compatible and much simplier
   GLC_AUDIO=0 environment variable disables audio capture
   custom signal handler to ensure that lib_close() is called at exit
    set GLC_SIGHANDLER=0 to disable
   non-interleaved audio stream support in (wav.c)
   unhook all alsa libraries => no audio stream duplication

0.2.0 (2007/09/30)
   ALSA audio capture support (audio.c)
    needs ALSA file plugin
   wav target (wav.c)

0.1.4 (2007/09/29)
   thread.c cleanups, utilize the new and improved fake dma implementation in
    packetstream 0.0.11

0.1.3 (2007/09/23)
   stream format improvements

0.1.2 (2007/09/22)
   generic stream processor thread (thread.c)
   use the new thread model where possible
    (gl_show, img, scale, info, pack, file)
    => much cleaner code and better error handling
   img has now better multictx support

0.1.1 (2007/09/21)
   improved info
   support for applications that have multiple drawables,
    even multithreaded

0.1.0 (2007/09/21)
   architechture improvements (= another massive cleanup)
   scaler has now its own thread (scale.c)
   primitive info target (info.c)
   deprecated environment variables:
     GLC_STATS
     GLC_UBUF
     GLC_CBUF
   new environment variables:
     GLC_CAPTURED_BUFFER_SIZE
     GLC_SCALED_BUFFER_SIZE
     GLC_COMPRESSED_BUFFER_SIZE

0.0.10 (2007/09/20)
   support for capturing at glFinish() (GLC_CAPTURE_GLFINISH)
    for example compiz needs this
   some additional cleanups

0.0.9 (2007/09/20)
   massive cleanups (nuked globals where possible and
    free memory at exit)
   fixed scaler segfault at resize

0.0.8 (2007/09/20)
   bilinear filtering support for scaling with ratio != 0.5
   adjustable capture buffer (GLC_CAPTURE)
   ajdustable uncompressed and compressed stream buffer
    size (GLC_UBUF and GLC_CBUF)

0.0.7 (2007/09/18)
   BMP bugfixes

0.0.6 (2007/09/17)
   minilzo support
   support for exporting frames as Win 3.x BGR BMP images
   example encoder.sh script for encoding exported BMP images to
    x264-encoded video
   configurable stats (GLC_STATS)

0.0.5 (2007/09/15)
   initial arbitrary ratio (< 1.0) scaler
   use 'elfhacks' to hook dlsym()

0.0.4 (2007/09/14)
   scaler improvements (GLC_SCALE)
   use PS_PACKET_TRY, insufficient disk performance shouldn't affect
    running application any more (unless it is also waiting for disk)

0.0.3 (2007/09/10)
   adjustable capture fps and stream file (GLC_FILE and GLC_FPS)
   initial scaling support (GLC_RESIZE)

0.0.2 (2007/09/10)
   initial release
